# -*- coding: utf-8 -*-
import redis
import os
import telebot
import schedule
import time
import random
#host from home
#import mytoken    

# import some_api_lib
# import ...
from pyowm.exceptions import api_response_error
from pyowm import OWM
#Yobit function
from yobit import get_btc

# Example of your code beginning
#           Config vars
token = os.environ['TELEGRAM_TOKEN']
API_key = os.environ['API_key']
#             ...

# If you use redis, install this add-on https://elements.heroku.com/addons/heroku-redis
# r = redis.from_url(os.environ.get("REDIS_URL"))

#       Your bot code below
# token-telegram

#token = mytoken.TOKEN
#API_key = mytoken.API_key
bot = telebot.TeleBot(token)
#              ...
# OWM API

#host from home

owm = OWM(API_key, language="ua")

@bot.message_handler(content_types=['document', 'audio'])
def handle_docs_audio(message):
	pass

@bot.message_handler(regexp="(?<![\w.])[0-9]{2,4}([0-9])$")
def guess_city(message):
    '''Input number to guess a city
    '''
    try:
        observation = owm.weather_at_place(message.text)
        l = observation.get_location()
        city_name = l.get_name()
        answer = '–¢—ã –ø–æ–ø–∞–ª –ø—Ä—è–º–∏–∫–æ–º –≤ {}'.format(city_name)
    except api_response_error.NotFoundError:
        answer = '–ö–æ—Ç–∏–∫, –ø–æ–ø—Ä–æ–±—É–π –≤ –µ—â–µ —Ä–∞–∑'
    bot.send_message(message.chat.id, answer)

sticker_list = (
    "CAADAgADAQADAcY0GmUhPCW6Bd4vAg",
    "CAADAgADggAD8jJRHB0V6PPLbjFyAg",
    "CAADAgADhAAD8jJRHLnk-jBUeuhTAg",
    "CAADAgADkQAD8jJRHIfKn60XlZdSAg",
    "CAADAgADhQAD8jJRHDNzGW-VTHq8Ag",
    "CAADAgADhwAD8jJRHI0VAW1GfrO_Ag",
    "CAADAgADgQAD8jJRHENq6dmDN1yDAg",
    "CAADAgADhgAD8jJRHKJ8teQ4pD9RAg",
    "CAADAgADhwAD8jJRHI0VAW1GfrO_Ag",
    "CAADAgADiAAD8jJRHDTXmT_B0PiCAg"
)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_sticker(message.chat.id, "CAADAgADfgAD8jJRHBsycQ5qWUfNAg")
    welcome_text = '''–ü—Ä–∏–≤–µ—Ç, —è –≤ —Ç–≤–æ–µ–º —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–∏ 24/7. –î–∞–≤–∞–π —Ä–∞—Å—Å–∫–∞–∂—É —á—Ç–æ —è —É–º–µ—é. –ú–æ–∂–µ—à—å –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ —è —Å–∫–∞–∂—É —Ç–µ–±–µ –∫–∞–∫–∞—è –ø–æ–≥–æ–¥–∞ –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ. –¢–∞–∫ –∂–µ –º–æ–∂–µ—à—å —Å–∫–∏–Ω—É—Ç—å –º–Ω–µ —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é –∏ —è –æ–ø—Ä–µ–¥–µ–ª—é —Å–∞–º, –≥–¥–µ –¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è)
    
–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ /help'''
    time.sleep(5)
    bot.send_message(message.chat.id, welcome_text)

@bot.message_handler(commands=['help'])
def send_welcome(message):
    help_text =  '''–ö–æ—Ç–∏—á–µ–∫, —è —É–º–µ—é –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –ø–æ–≥–æ–¥—É –≤ —Ç–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ. –ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ —Å–≤–æ–π –≥–æ—Ä–æ–¥ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é.

/sticker - –¥–∞–≤–∞–π –æ—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ —Å—Ç–∏–∫–µ—Ä)
/contact - –∑–∞–º–µ—á–∞–Ω–∏—è –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–π –∫–æ—Ç–∏–∫—É, –Ω–∞ –µ–≥–æ username

–°–∫—Ä—ã—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
/btc - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ—Ç–∏—á–∫—É —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å BTC –≤ USD'''
    bot.send_message(message.chat.id, help_text)

@bot.message_handler(commands=['sticker'])
def send_welcome(message):
    bot.send_sticker(message.chat.id, random.choice(sticker_list))

@bot.message_handler(commands=['contact'])
def send_welcome(message):
    answer = "–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –∑–∞–º–µ—á–∞–Ω–∏—è, –Ω–∞–ø–∏—à–∏ —ç—Ç–æ–º—É —á–µ–ª–∏–∫—É: @gyonmyon"
    bot.send_message(message.chat.id, answer)

@bot.message_handler(commands=['btc'])
def send_welcome(message):
    answer = get_btc()
    bot.send_message(message.chat.id, answer)
    

@bot.message_handler(commands=['city'])
def send_welcome(message):
    answer = "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
    bot.send_message(message.chat.id, answer)

@bot.message_handler(commands=['home'])
def send_welcome(message):
    answer = "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
    bot.send_message(message.chat.id, answer)

@bot.message_handler(content_types=['location'])
def take_location(message):
    try:
        latitude = message.location.latitude
        longitude = message.location.longitude
        obs = owm.weather_at_coords(latitude, longitude)
        weather = obs.get_weather()

        humidity = weather.get_humidity()

        l = obs.get_location()
        city_name = l.get_name()

        temperature = weather.get_temperature("celsius")["temp"]

        answer = "–Ø –Ω–∞—à–µ–ª —Ç–µ–±—è üôà\n"
        answer += "–°–µ–π—á–∞—Å –≤ —Ç–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ {} ".format(city_name) + weather.get_detailed_status() + "\n"
        answer += "–ì—Ä–∞–¥—É—Å–Ω–∏–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç {}  –≥—Ä–∞–¥—É—Å–æ–≤ .\n".format(temperature)
        answer += "–í–ª–∞–∂–Ω–æ—Å—Ç—å: {}%".format(humidity) + "\n\n"
        if temperature < 0:
            answer += "–ù–∞–¥–µ–≤–∞–π —à–∞–ø–∫—É, –ª–∞–ø—É–ª—è, –∞ —Ç–æ –∑–∞–º–µ—Ä–∑–Ω–µ—à—å, –ª—É—á—à–µ –±—ã –Ω–µ –≤—ã–ª–∞–∑–∏—Ç—å –∏–∑ –ø–æ—Å—Ç–µ–ª–∏)"
        elif temperature < 10:
            answer += "–ù–∞ —É–ª–∏—Ü–µ —Ö–æ–ª–æ–¥–Ω–æ, –ª—É—á—à–µ –≥—Ä–µ—Ç—å—Å—è —Ç–µ–ø–ª—ã–º —á–∞–µ–º"
        elif temperature < 15:
            answer += "–í—Å–µ –µ—â–µ –º–æ–∂–µ—à—å –æ–¥–µ–≤–∞—Ç—å—Å—è —Ç–µ–ø–ª–æ. –ñ–∞—Ä–∫–æ –Ω–µ –±—É–¥–µ—Ç, –∫–æ—Ç–∏–∫, —è –æ–±–µ—â–∞—é"
        elif temperature < 20:
            answer += "–ú–æ–∂–µ—Ç —Å–µ–≥–æ–¥–Ω—è –æ–¥–µ–Ω–µ—à—å—Å—è, –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é, –∞, –∫–æ—Ç–∏—á–µ–∫?"
        elif temperature < 25:
            answer += "–ü–æ–≥–æ–¥–∞ —à–µ–ø—á–µ—Ç, –Ω—É–∂–Ω–æ –≤—ã–≥—É–ª—è—Ç—å –∫–æ—Ç–∏—á–∫–∞)))"
        elif 25 <= temperature <= 30:
            answer += "–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ —Ç–µ–ø–ª–æ –∏ –º–Ω–µ –Ω–µ –Ω—É–∂–Ω–æ —Å–ª–µ–¥–∏—Ç—å, —á—Ç–æ–±—ã –∫–æ—Ç–∏–∫–∏ –Ω–µ —Ö–æ–¥–∏–ª–∏ —Ä–∞–∑–¥–µ—Ç—ã–µ"
        elif temperature > 30:
            answer += "–°—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ—á–µ–Ω—å –∂–∞—Ä–∫–æ, –Ω–µ –∑–∞–±—ã–≤–∞–π –ø–∏—Ç—å –≤–æ–¥—É –∏ –ª—É—á—à–µ –æ—Å—Ç–∞—Ç—å—Å—è –¥–æ–º–∞)"
    except:
        answer = "–ò–∑–≤–∏–Ω–∏, –∫–æ—Ç–∏—á–µ–∫, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é("
    
    bot.send_message(message.chat.id, answer)

@bot.message_handler(func=lambda message: True)
def text_message(message):
    '''Send weather to answer of message.
    '''
    try:
        obs = owm.weather_at_place(message.text)
        weather = obs.get_weather()
        temperature = weather.get_temperature("celsius")["temp"]
        humidity = weather.get_humidity()


        answer = "–°–µ–π—á–∞—Å –≤ —Ç–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ {} ".format(city_name) + weather.get_detailed_status() + "\n"
        answer += "–ì—Ä–∞–¥—É—Å–Ω–∏–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç {}  –≥—Ä–∞–¥—É—Å–æ–≤ \n".format(temperature)
        answer += "–í–ª–∞–∂–Ω–æ—Å—Ç—å: {}%".format(humidity) + "\n\n"
        if temperature < 0:
            answer += "–ù–∞–¥–µ–≤–∞–π —à–∞–ø–∫—É, –ª–∞–ø—É–ª—è, –∞ —Ç–æ –∑–∞–º–µ—Ä–∑–Ω–µ—à—å, –ª—É—á—à–µ –±—ã –Ω–µ –≤—ã–ª–∞–∑–∏—Ç—å –∏–∑ –ø–æ—Å—Ç–µ–ª–∏)"
        elif temperature < 10:
            answer += "–ù–∞ —É–ª–∏—Ü–µ —Ö–æ–ª–æ–¥–Ω–æ, –ª—É—á—à–µ –≥—Ä–µ—Ç—å—Å—è —Ç–µ–ø–ª—ã–º —á–∞–µ–º"
        elif temperature < 15:
            answer += "–í—Å–µ –µ—â–µ –º–æ–∂–µ—à—å –æ–¥–µ–≤–∞—Ç—å—Å—è —Ç–µ–ø–ª–æ. –ñ–∞—Ä–∫–æ –Ω–µ –±—É–¥–µ—Ç, –∫–æ—Ç–∏–∫, —è –æ–±–µ—â–∞—é"
        elif temperature < 20:
            answer += "–ú–æ–∂–µ—Ç —Å–µ–≥–æ–¥–Ω—è –æ–¥–µ–Ω–µ—à—å—Å—è, –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é, –∞, –∫–æ—Ç–∏—á–µ–∫?"
        elif temperature < 25:
            answer += "–ü–æ–≥–æ–¥–∞ —à–µ–ø—á–µ—Ç, –Ω—É–∂–Ω–æ –≤—ã–≥—É–ª—è—Ç—å –∫–æ—Ç–∏—á–∫–∞)))"
        elif 25 <= temperature <= 30:
            answer += "–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ —Ç–µ–ø–ª–æ –∏ –º–Ω–µ –Ω–µ –Ω—É–∂–Ω–æ —Å–ª–µ–¥–∏—Ç—å, —á—Ç–æ–±—ã –∫–æ—Ç–∏–∫–∏ –Ω–µ —Ö–æ–¥–∏–ª–∏ —Ä–∞–∑–¥–µ—Ç—ã–µ"
        elif temperature > 30:
            answer += "–°—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ—á–µ–Ω—å –∂–∞—Ä–∫–æ, –Ω–µ –∑–∞–±—ã–≤–∞–π –ø–∏—Ç—å –≤–æ–¥—É –∏ –ª—É—á—à–µ –æ—Å—Ç–∞—Ç—å—Å—è –¥–æ–º–∞)"
    except:
        answer = "–ò–∑–≤–∏–Ω–∏, –∫–æ—Ç–∏—á–µ–∫, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é("
    bot.send_message(message.chat.id, answer)

# try bot.infinity_polling(False)
#offset=lastUpdateID + 1
bot.polling(none_stop=False, interval=0, timeout=20)
