# -*- coding: utf-8 -*-
import redis
import json
import os
import telebot
from telebot import types
import schedule
import time
import random
import config

#host from home
#from mytoken import token, API_key   

# import some_api_lib
from pyowm import OWM, exceptions, timeutils
#Yobit function
from yobit import get_btc

# Example of your code beginning
#           Config vars
token = os.environ['TELEGRAM_TOKEN']
API_key = os.environ['API_key']

# If you use redis, install this add-on https://elements.heroku.com/addons/heroku-redis
# r = redis.from_url(os.environ.get("REDIS_URL"))

bot = telebot.TeleBot(token)

owm = OWM(API_key, language="ua")
#              ...

@bot.message_handler(content_types=['audio'])
def handle_docs_audio(message):
    answer_audio = "–°–ø–∞—Å–∏–±–æ –∫–æ—Ç–∏–∫, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å–ª—É—à–∞—é"
    bot.send_message(message.chat.id, answer_audio)

@bot.message_handler(regexp="(?<![\w.])[0-9]{2,4}([0-9])$")
def guess_city(message):
    '''Return city name by a number
    
    If city not found - return NotFoundError
    If Timeout is reached - return APICallTimeoutError'''
    try:
        obs = owm.weather_at_place(message.text)
        l = obs.get_location()
        city_name = l.get_name()
        guess_answer = '–¢—ã –ø–æ–ø–∞–ª –ø—Ä—è–º–∏–∫–æ–º –≤ {}'.format(city_name)
    except exceptions.api_response_error.NotFoundError:
        guess_answer = '–ö–æ—Ç–∏–∫, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑'
    except exceptions.api_call_error.APICallTimeoutError:
        timeout_sticker = 'CAADAgADkgAD8jJRHGU0BGG5fiOiAg'
        bot.send_sticker(message.chat.id, timeout_sticker)
        time.sleep(5)
        guess_answer = '–°–µ—Ä–≤–µ—Ä –∫–∞–∫-—Ç–æ –¥–æ–ª–≥–æ –æ—Ç–≤–µ—á–∞–µ—Ç, –∂–¥–µ–º –æ—Ç–≤–µ—Ç–∞'
    bot.send_message(message.chat.id, guess_answer)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    start_sticker = "CAADAgADfgAD8jJRHBsycQ5qWUfNAg"
    bot.send_sticker(message.chat.id, start_sticker)
    time.sleep(5)
    bot.send_message(message.chat.id, config.welcome_text)

@bot.message_handler(commands=['help'])
def send_help(message):
    bot.send_message(message.chat.id, config.help_text)

@bot.message_handler(commands=['sticker'])
def send_sticker(message):
    bot.send_sticker(message.chat.id, random.choice(config.sticker_list))

@bot.message_handler(commands=['contact'])
def send_contact(message):
    answer_contact = "–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –∑–∞–º–µ—á–∞–Ω–∏—è, –Ω–∞–ø–∏—à–∏ —ç—Ç–æ–º—É —á–µ–ª–∏–∫—É: @gyonmyon"
    bot.send_message(message.chat.id, answer_contact)

@bot.message_handler(commands=['btc'])
def send_welcome(message):
    answer = get_btc()
    bot.send_message(message.chat.id, answer)
    
@bot.message_handler(commands=['city'])
def send_welcome(message):
    answer = "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
    bot.send_message(message.chat.id, answer)

@bot.message_handler(commands=['home'])
def send_welcome(message):
    answer = "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
    bot.send_message(message.chat.id, answer)

@bot.message_handler(content_types=['location'])
def take_location(message):
    #print(message.json['date'])
    try:
        latitude = message.location.latitude
        longitude = message.location.longitude
        obs = owm.weather_at_coords(latitude, longitude)
        weather = obs.get_weather()

        humidity = weather.get_humidity()

        l = obs.get_location()
        city_name = l.get_name()

        temperature = weather.get_temperature("celsius")["temp"]

        answer = "–Ø –Ω–∞—à–µ–ª —Ç–µ–±—è üôà\n"
        answer += config.answer_text.format(city_name, weather.get_detailed_status(), temperature, humidity)
        if temperature < 0:
            answer += "–¢–µ–±–µ —Ç–∞–º –Ω–µ —Ö–æ–ª–æ–¥–Ω–æ, –∫–æ—Ç–∏—á–∫–∞?"
        elif temperature < 10:
            answer += "–ß–∞—à–∫–∞ –≥–æ—Ä—è—á–µ–≥–æ —á–∞—è –Ω–µ –ø–æ–º–µ—à–∞–µ—Ç"
        elif temperature < 15:
            answer += "–ß—É—É—É—Ç–æ—á–∫—É –±—ã —Ç–µ–ø–ª–µ–µ)"
        elif temperature < 20:
            answer += "–ú—É—É—Ä"
        elif temperature < 25:
            answer += "–ü–æ–≥–æ–¥–∞ —à–µ–ø—á–µ—Ç, –Ω—É–∂–Ω–æ –≤—ã–≥—É–ª—è—Ç—å –∫–æ—Ç–∏—á–∫–∞)))"
        elif 25 <= temperature <= 30:
            answer += "–ï—â–µ —á—É—Ç—å-—á—É—Ç—å –∏ —Å—Ç–∞–Ω–µ—Ç —Å–æ–≤—Å–µ–º –∂–∞—Ä–∫–æ, —Ä–∞–∑–¥–µ–≤–∞–π—Å—è...))"
        elif temperature > 30:
            answer += "–ï—Å–ª–∏ —Ç—ã –Ω–∞ —É–ª–∏—Ü–µ —Ç–æ –ª—É—á—à–µ –±—ã—Ç—å –≤ —Ç–µ–Ω–∏. –ò –Ω–µ –∑–∞–±—ã–≤–∞–π –ø–∏—Ç—å –≤–æ–¥—É üêà"
    except:
        answer = "–ò–∑–≤–∏–Ω–∏, –∫–æ—Ç–∏—á–µ–∫, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é("
    
    bot.send_message(message.chat.id, answer)

@bot.message_handler(func=lambda message: True)
def text_message(message):
    '''Send weather of current time to answer of message.
    
    If location not found - return NotFound text'''
    try:
        obs = owm.weather_at_place(message.text)
        weather = obs.get_weather()
        temperature = weather.get_temperature("celsius")["temp"]
        humidity = weather.get_humidity()

        l = obs.get_location()
        city_name = l.get_name()

        fc = owm.three_hours_forecast(message.text)
        f = fc.get_forecast()

        answer = config.answer_text.format(city_name, weather.get_detailed_status(), temperature, humidity)
        if temperature < 0:
            answer += "–ù–∞–¥–µ–≤–∞–π —à–∞–ø–∫—É, –ª–∞–ø—É–ª—è, –∞ —Ç–æ –∑–∞–º–µ—Ä–∑–Ω–µ—à—å, –ª—É—á—à–µ –±—ã –Ω–µ –≤—ã–ª–∞–∑–∏—Ç—å –∏–∑ –ø–æ—Å—Ç–µ–ª–∏)"
        elif temperature < 10:
            answer += "–ù–∞ —É–ª–∏—Ü–µ —Ö–æ–ª–æ–¥–Ω–æ, –ª—É—á—à–µ –≥—Ä–µ—Ç—å—Å—è —Ç–µ–ø–ª—ã–º —á–∞–µ–º"
        elif temperature < 15:
            answer += "–í—Å–µ –µ—â–µ –º–æ–∂–µ—à—å –æ–¥–µ–≤–∞—Ç—å—Å—è —Ç–µ–ø–ª–æ. –ñ–∞—Ä–∫–æ –Ω–µ –±—É–¥–µ—Ç, –∫–æ—Ç–∏–∫, —è –æ–±–µ—â–∞—é"
        elif temperature < 20:
            answer += "–ú–æ–∂–µ—Ç —Å–µ–≥–æ–¥–Ω—è –æ–¥–µ–Ω–µ—à—å—Å—è, –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é, –∞, –∫–æ—Ç–∏—á–µ–∫?"
        elif temperature < 25:
            answer += "–ü–æ–≥–æ–¥–∞ —à–µ–ø—á–µ—Ç, –Ω—É–∂–Ω–æ –≤—ã–≥—É–ª—è—Ç—å –∫–æ—Ç–∏—á–∫–∞)))"
        elif 25 <= temperature <= 30:
            answer += "–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ —Ç–µ–ø–ª–æ –∏ –º–Ω–µ –Ω–µ –Ω—É–∂–Ω–æ —Å–ª–µ–¥–∏—Ç—å, —á—Ç–æ–±—ã –∫–æ—Ç–∏–∫–∏ –Ω–µ —Ö–æ–¥–∏–ª–∏ —Ä–∞–∑–¥–µ—Ç—ã–µ"
        elif temperature > 30:
            answer += "–°—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ—á–µ–Ω—å –∂–∞—Ä–∫–æ, –Ω–µ –∑–∞–±—ã–≤–∞–π –ø–∏—Ç—å –≤–æ–¥—É –∏ –ª—É—á—à–µ –æ—Å—Ç–∞—Ç—å—Å—è –¥–æ–º–∞)"
    except:
        answer = "–ò–∑–≤–∏–Ω–∏, –∫–æ—Ç–∏—á–µ–∫, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é("
    bot.send_message(message.chat.id, answer)

bot.polling(none_stop=False, interval=0, timeout=20)