from pyowm import OWM, exceptions, timeutils
import random, config
from mytoken import token, API_key   

owm = OWM(API_key, language="ua")

def get_loc_weather(latitude, longitude):
    try:
        obs = owm.weather_at_coords(latitude, longitude)
        weather = obs.get_weather()

        humidity = weather.get_humidity()
        l = obs.get_location()
        city_name = l.get_name()
        temperature = weather.get_temperature("celsius")["temp"]

        answer = "–Ø –Ω–∞—à–µ–ª —Ç–µ–±—è üôà"
        answer += config.answer_text.format(city_name, weather.get_detailed_status(), temperature, humidity)
        if temperature < 0:
            answer += "–¢–µ–±–µ —Ç–∞–º –Ω–µ —Ö–æ–ª–æ–¥–Ω–æ, –∫–æ—Ç–∏—á–∫–∞?"
        elif temperature < 10:
            answer += "–ß–∞—à–∫–∞ –≥–æ—Ä—è—á–µ–≥–æ —á–∞—è –Ω–µ –ø–æ–º–µ—à–∞–µ—Ç"
        elif temperature < 15:
            answer += "–ß—É—É—É—Ç–æ—á–∫—É –±—ã —Ç–µ–ø–ª–µ–µ)"
        elif temperature < 20:
            answer += "–ú—É—É—Ä"
        elif temperature < 25:
            answer += "–ü–æ–≥–æ–¥–∞ —à–µ–ø—á–µ—Ç, –Ω—É–∂–Ω–æ –≤—ã–≥—É–ª—è—Ç—å –∫–æ—Ç–∏—á–∫–∞)))"
        elif 25 <= temperature <= 30:
            answer += "–ï—â–µ —á—É—Ç—å-—á—É—Ç—å –∏ —Å—Ç–∞–Ω–µ—Ç —Å–æ–≤—Å–µ–º –∂–∞—Ä–∫–æ, —Ä–∞–∑–¥–µ–≤–∞–π—Å—è...))"
        elif temperature > 30:
            answer += "–ï—Å–ª–∏ —Ç—ã –Ω–∞ —É–ª–∏—Ü–µ —Ç–æ –ª—É—á—à–µ –±—ã—Ç—å –≤ —Ç–µ–Ω–∏. –ò –Ω–µ –∑–∞–±—ã–≤–∞–π –ø–∏—Ç—å –≤–æ–¥—É üêà"
    except exceptions.api_response_error.NotFoundError:
        answer = random.choice(config.answer_NotFound)
    except exceptions.api_call_error.APICallTimeoutError:
        answer = config.answer_APICallTimeout
    
    return answer

def get_city_weather(city):
    '''Send weather of current time to answer of message.
    
    If location not found - return NotFound text'''
    try:
        obs = owm.weather_at_place(city)
        weather = obs.get_weather()
        temperature = weather.get_temperature("celsius")["temp"]
        humidity = weather.get_humidity()

        l = obs.get_location()
        city_name = l.get_name()

        fc = owm.three_hours_forecast(city)
        f = fc.get_forecast()

        answer = config.answer_text.format(city_name, weather.get_detailed_status(), temperature, humidity)
        if temperature < 0:
            answer += random.choice(config.answer_list_cold)
        elif temperature < 10:
            answer += "–ù–∞ —É–ª–∏—Ü–µ —Ö–æ–ª–æ–¥–Ω–æ, –ª—É—á—à–µ –≥—Ä–µ—Ç—å—Å—è —Ç–µ–ø–ª—ã–º —á–∞–µ–º"
        elif temperature < 15:
            answer += "–í—Å–µ –µ—â–µ –º–æ–∂–µ—à—å –æ–¥–µ–≤–∞—Ç—å—Å—è —Ç–µ–ø–ª–æ. –ñ–∞—Ä–∫–æ –Ω–µ –±—É–¥–µ—Ç, –∫–æ—Ç–∏–∫, —è –æ–±–µ—â–∞—é"
        elif temperature < 20:
            answer += "–ú–æ–∂–µ—Ç —Å–µ–≥–æ–¥–Ω—è –æ–¥–µ–Ω–µ—à—å—Å—è, –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é, –∞, –∫–æ—Ç–∏—á–µ–∫?"
        elif temperature < 25:
            answer += "–ü–æ–≥–æ–¥–∞ —à–µ–ø—á–µ—Ç, –Ω—É–∂–Ω–æ –≤—ã–≥—É–ª—è—Ç—å –∫–æ—Ç–∏—á–∫–∞)))"
        elif 25 <= temperature <= 30:
            answer += "–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ —Ç–µ–ø–ª–æ –∏ –º–Ω–µ –Ω–µ –Ω—É–∂–Ω–æ —Å–ª–µ–¥–∏—Ç—å, —á—Ç–æ–±—ã –∫–æ—Ç–∏–∫–∏ –Ω–µ —Ö–æ–¥–∏–ª–∏ —Ä–∞–∑–¥–µ—Ç—ã–µ"
        elif temperature > 30:
            answer += random.choice(config.answer_list_hot)
    except exceptions.api_response_error.NotFoundError:
        answer = random.choice(config.answer_NotFound)
    except exceptions.api_call_error.APICallTimeoutError:
        answer = config.answer_APICallTimeout

    return answer
